apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: rabbitmq-operator-system
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: rabbitmqs.scaling.queues
spec:
  group: scaling.queues
  names:
    kind: RabbitMQ
    listKind: RabbitMQList
    plural: rabbitmqs
    singular: rabbitmq
  scope: ""
  validation:
    openAPIV3Schema:
      description: RabbitMQ is the Schema for the rabbitmqs API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: RabbitMQSpec defines the desired state of RabbitMQ
          properties:
            replicas:
              description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                Important: Run "make" to regenerate code after modifying this file
                Template v1.StatefulSet `json:"template"`'
              format: int32
              type: integer
            serviceDefinion:
              description: ServiceDefinition describes the service definition
              type: string
            template:
              description: TemplateSpec maps the template spec
              properties:
                spec:
                  description: ContainerSpec maps the container spec
                  properties:
                    contaniers:
                      description: ContainerDetailsSpec maps the container spec
                      properties:
                        image:
                          type: string
                        imagePullPolicy:
                          description: PullPolicy describes a policy for if/when to
                            pull a container image
                          type: string
                        livenessProbe:
                          description: CheckProbe contains the "probes" configurations
                            as livenessProbe and readinessProbe
                          properties:
                            initialDelaySeconds:
                              format: int32
                              type: integer
                            periodSeconds:
                              format: int32
                              type: integer
                            timeoutSeconds:
                              format: int32
                              type: integer
                          required:
                          - initialDelaySeconds
                          - periodSeconds
                          - timeoutSeconds
                          type: object
                        name:
                          type: string
                        readinessProbe:
                          description: CheckProbe contains the "probes" configurations
                            as livenessProbe and readinessProbe
                          properties:
                            initialDelaySeconds:
                              format: int32
                              type: integer
                            periodSeconds:
                              format: int32
                              type: integer
                            timeoutSeconds:
                              format: int32
                              type: integer
                          required:
                          - initialDelaySeconds
                          - periodSeconds
                          - timeoutSeconds
                          type: object
                      required:
                      - image
                      - imagePullPolicy
                      - livenessProbe
                      - name
                      - readinessProbe
                      type: object
                  type: object
              type: object
          required:
          - replicas
          - serviceDefinion
          type: object
        status:
          description: RabbitMQStatus defines the observed state of RabbitMQ
          type: object
      type: object
  version: v1alpha
  versions:
  - name: v1alpha
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: rabbitmq-operator-leader-election-role
  namespace: rabbitmq-operator-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
  - list
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: rabbitmq-operator-manager-role
rules:
- apiGroups:
  - scaling.queues
  resources:
  - rabbitmqs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - scaling.queues
  resources:
  - rabbitmqs/status
  verbs:
  - get
  - patch
  - update
  - list
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: rabbitmq-operator-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: rabbitmq-operator-leader-election-rolebinding
  namespace: rabbitmq-operator-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: rabbitmq-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: rabbitmq-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: rabbitmq-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: rabbitmq-operator-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: rabbitmq-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: rabbitmq-operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: rabbitmq-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: rabbitmq-operator-system
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "8443"
    prometheus.io/scheme: https
    prometheus.io/scrape: "true"
  labels:
    control-plane: controller-manager
  name: rabbitmq-operator-controller-manager-metrics-service
  namespace: rabbitmq-operator-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: rabbitmq-operator-controller-manager
  namespace: rabbitmq-operator-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.4.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --enable-leader-election
        command:
        - /manager
        image: gsantomaggio/rabbitmq-operator:3
        name: manager
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
      terminationGracePeriodSeconds: 10
